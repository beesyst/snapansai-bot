import os
import json
import requests
import subprocess
from pynput import keyboard
from datetime import datetime
import platform

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
CONFIG_PATH = "config.json"

def load_config():
    if not os.path.exists(CONFIG_PATH):
        print("‚ùå –û—à–∏–±–∫–∞: config.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        exit(1)
    with open(CONFIG_PATH, "r") as f:
        return json.load(f)

config = load_config()
TOKEN = config["telegram"]["bot_token"]
CHAT_ID = config["telegram"]["chat_id"]
API_URL = f"https://api.telegram.org/bot{TOKEN}/sendPhoto"
HOTKEY = config["screenshot"]["hotkey"].lower().split("+")
OS_TYPE = config["screenshot"].get("os", "auto")

# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
if OS_TYPE == "auto":
    system_platform = platform.system().lower()
    if "linux" in system_platform:
        OS_TYPE = "ubuntu"
    elif "darwin" in system_platform:
        OS_TYPE = "macos"
    elif "windows" in system_platform:
        OS_TYPE = "windows"
    else:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û–°.")
        exit(1)

COMMANDS = config["screenshot"]["commands"].get(OS_TYPE, {})
SCREENSHOTS_DIR = os.path.expanduser("~/Pictures/Screenshots")
os.makedirs(SCREENSHOTS_DIR, exist_ok=True)  # ‚úÖ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç

def take_screenshot():
    """–î–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É."""
    try:
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        screenshot_path = os.path.join(SCREENSHOTS_DIR, f"screenshot_{timestamp}.png")

        run_command = COMMANDS.get("run", "").strip()
        print(f"üñ•Ô∏è –û–°: {OS_TYPE}")
        print(f"üõ† RUN-–∫–æ–º–∞–Ω–¥–∞: {run_command}")

        if not run_command:
            print("‚ùå –û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –≤ config.json.")
            return None

        subprocess.run(
            ["/bin/bash", "-c", f'{run_command} "{screenshot_path}"'],
            check=True,
            env=os.environ,
        )

        if os.path.exists(screenshot_path):
            print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {screenshot_path}")
            return screenshot_path
        else:
            print("‚ùå –û—à–∏–±–∫–∞: —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω!")
            return None

    except subprocess.CalledProcessError as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
        return None


def send_screenshot(filename):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ Telegram –∏ —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏."""
    try:
        with open(filename, "rb") as img:
            response = requests.post(
                API_URL, data={"chat_id": CHAT_ID}, files={"photo": img}
            )
        if response.status_code == 200:
            print(f"üì§ –°–∫—Ä–∏–Ω—à–æ—Ç {filename} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            os.remove(filename)
            print(f"üóëÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç {filename} —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏.")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.text}")
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")


def on_press(key):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –≥–æ—Ä—è—á–µ–π –∫–ª–∞–≤–∏—à–∏."""
    try:
        key_str = (
            key.char.lower()
            if hasattr(key, "char") and key.char
            else str(key).split(".")[-1].lower()
        )
        pressed_keys.add(key_str)

        if set(HOTKEY).issubset(pressed_keys):
            print("üì∏ –ì–æ—Ä—è—á–∞—è –∫–ª–∞–≤–∏—à–∞ –Ω–∞–∂–∞—Ç–∞! –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç...")
            screenshot = take_screenshot()
            if screenshot:
                send_screenshot(screenshot)
            pressed_keys.clear()

    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∞–≤–∏—à–∏: {e}")


def on_release(key):
    """–û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∞–≤–∏—à –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏."""
    try:
        key_str = (
            key.char.lower()
            if hasattr(key, "char") and key.char
            else str(key).split(".")[-1].lower()
        )
        pressed_keys.discard(key_str)
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏ –∫–ª–∞–≤–∏—à–∏: {e}")


pressed_keys = set()

print(f"üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ä—è—á–µ–π –∫–ª–∞–≤–∏—à–∏ {'+'.join(HOTKEY)}...")
with keyboard.Listener(on_press=on_press, on_release=on_release) as listener:
    listener.join()
