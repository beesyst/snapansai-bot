import json
import telebot
import os
import requests
import time

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
CONFIG_PATH = "config.json"


def load_config():
    if not os.path.exists(CONFIG_PATH):
        return {"telegram": {}}
    with open(CONFIG_PATH, "r") as config_file:
        return json.load(config_file)


def save_config(config):
    with open(CONFIG_PATH, "w") as config_file:
        json.dump(config, config_file, indent=4)
    print("‚úÖ chat_id —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ config.json!")


def get_chat_id(token):
    """–ü–æ–ª—É—á–∞–µ—Ç chat_id —á–µ—Ä–µ–∑ getUpdates"""
    url = f"https://api.telegram.org/bot{token}/getUpdates"
    try:
        response = requests.get(url).json()
        if "result" in response and len(response["result"]) > 0:
            chat_id = response["result"][-1]["message"]["chat"]["id"]
            print(f"üîπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–µ–Ω chat_id: {chat_id}")
            return chat_id
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è chat_id: {e}")
    return None


config = load_config()
TOKEN = config.get("telegram", {}).get("bot_token")
CHAT_ID = config.get("telegram", {}).get("chat_id")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ bot_token
if not TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: bot_token –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ config.json!")
    exit(1)

# –ï—Å–ª–∏ chat_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ API
if not CHAT_ID:
    print("üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º chat_id...")
    CHAT_ID = get_chat_id(TOKEN)
    if CHAT_ID:
        config["telegram"]["chat_id"] = CHAT_ID
        save_config(config)
    else:
        print(
            "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å chat_id. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=["start"])
def send_welcome(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ —è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—é.")

    # –ï—Å–ª–∏ chat_id –µ—â–µ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    if not config["telegram"].get("chat_id"):
        config["telegram"]["chat_id"] = chat_id
        save_config(config)
        print(f"‚úÖ chat_id {chat_id} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")


@bot.message_handler(content_types=["photo"])
def handle_screenshot(message):
    file_id = message.photo[-1].file_id
    file_info = bot.get_file(file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    with open("received.png", "wb") as img:
        img.write(downloaded_file)

    bot.send_message(message.chat.id, "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!")


bot.polling()
