import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from ai_api import process_image
import json
import requests
import os

# üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ config.json
CONFIG_PATH = "config.json"


def load_config():
    with open(CONFIG_PATH, "r") as file:
        return json.load(file)


def save_config(config):
    with open(CONFIG_PATH, "w") as file:
        json.dump(config, file, indent=4)
    logging.info("‚úÖ chat_id —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ config.json!")


config = load_config()
TELEGRAM_TOKEN = config["telegram"]["bot_token"]

logging.basicConfig(level=logging.INFO)
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()


# üîß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (photo –∏–ª–∏ document)
async def process_received_file(file_id, chat_id):
    file_info = await bot.get_file(file_id)
    file_path = file_info.file_path
    file_url = f"https://api.telegram.org/file/bot{TELEGRAM_TOKEN}/{file_path}"
    logging.info(f"üåê –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {file_url}")

    img_data = requests.get(file_url).content
    with open("received.png", "wb") as handler:
        handler.write(img_data)

    await bot.send_message(
        chat_id, "üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —á–µ—Ä–µ–∑ OpenAI..."
    )
    response = await process_image("received.png")
    await bot.send_message(chat_id, f"ü§ñ –û—Ç–≤–µ—Ç –ò–ò:\n{response}")


@dp.message(F.text == "/start")
async def handle_start(message: Message):
    chat_id = message.chat.id
    config = load_config()
    if config["telegram"].get("chat_id") != chat_id:
        config["telegram"]["chat_id"] = chat_id
        save_config(config)
        logging.info(f"‚úÖ chat_id {chat_id} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ —è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—é.")


@dp.message(F.photo | F.document)
async def handle_media(message: Message):
    chat_id = message.chat.id

    # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ photo –∏–ª–∏ document
    if message.photo:
        file_id = message.photo[-1].file_id
    elif message.document:
        file_id = message.document.file_id
    else:
        await message.answer("‚ö†Ô∏è –Ø –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Ñ–∞–π–ª–∞.")
        return

    logging.info(f"üìù –ü–æ–ª—É—á–µ–Ω file_id: {file_id}")
    await process_received_file(file_id, chat_id)


@dp.message(F.text)
async def echo_message(message: Message):
    await message.answer("üì© –û—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª!")


async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
