#!/bin/bash

echo "üöÄ –°—Ç–∞—Ä—Ç—É–µ–º!"

CONFIG_FILE="config.json"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python3
echo "üîé –ß–µ–∫–∞—é –µ—Å—Ç—å –ª–∏ Python3..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 –≥–¥–µ? –°—Ç–∞–≤—å –ø–æ-–±—ã—Å—Ç—Ä–æ–º—É –∏ –±—É–¥–µ—Ç —á–µ—Ç–∫–æ (sudo apt install python3)."
    exit 1
fi
echo "‚úÖ Python3 –Ω–∞–π–¥–µ–Ω!"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è config.json
if [ ! -f "$CONFIG_FILE" ]; then
    echo "‚ùå –§–µ–π–ª ‚Äî config.json –∫—É–¥–∞-—Ç–æ —Å–ª–∏–ª—Å—è!"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è config.json
update_config() {
    jq "$1" "$CONFIG_FILE" > tmp.json && mv tmp.json "$CONFIG_FILE"
}

# –í–≤–æ–¥ bot_token —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª
BOT_TOKEN=$(jq -r '.telegram.bot_token' "$CONFIG_FILE")
while [[ "$BOT_TOKEN" == "null" || -z "$BOT_TOKEN" ]]; do
    echo "üîî –ô–æ! Telegram Bot API token –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–±–µ—Ä–∏ –≤ @BotFather –∏ –≤–±–∏–≤–∞–π —Å—é–¥–∞:"
    read -r TOKEN_INPUT
    if [[ -n "$TOKEN_INPUT" ]]; then
        update_config ".telegram.bot_token = \"$TOKEN_INPUT\""
        echo "‚úÖ Telegram Bot API token –∫—Ä–∞—Å–∏–≤–æ –∑–∞–ª–µ—Ç–µ–ª –≤ config.json!"
        BOT_TOKEN="$TOKEN_INPUT"
    fi
done
echo "‚úÖ Telegram Bot API token –Ω–∞–π–¥–µ–Ω!"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –û–°
OS_SETTING=$(jq -r '.screenshot.os' "$CONFIG_FILE")
if [[ "$OS_SETTING" == "auto" || -z "$OS_SETTING" ]]; then
    UNAME_OUT="$(uname -s)"
    case "${UNAME_OUT}" in
        Linux*)     OS_TYPE=ubuntu;;
        Darwin*)    OS_TYPE=macos;;
        CYGWIN*|MINGW*) OS_TYPE=windows;;
        *)          OS_TYPE="unknown"
    esac
else
    OS_TYPE="$OS_SETTING"
fi
echo "üíΩ –û–° —Å–ø–∞–ª–µ–Ω–∞: $OS_TYPE"

if [[ "$OS_TYPE" == "unknown" ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ß—ë—Ç –Ω–µ–ø–æ–Ω—è—Ç–Ω–∞—è –û–°. –ü–æ–¥–∫–∏–Ω—å –ø–∞—Ä–∞–º–µ—Ç—Ä 'os' –≤ config.json."
    exit 1
fi

# –°–∫—Ä—ã—Ç—ã–π —Å–±—Ä–æ—Å GTK_PATH –¥–ª—è Ubuntu
if [[ "$OS_TYPE" == "ubuntu" ]]; then
    UNSET_CMD=$(jq -r ".screenshot.commands.$OS_TYPE.unset" "$CONFIG_FILE")
    if [[ "$UNSET_CMD" != "null" && -n "$UNSET_CMD" ]]; then
        eval "$UNSET_CMD" &> /dev/null
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç-—É—Ç–∏–ª–∏—Ç—ã
CHECK_CMD=$(jq -r ".screenshot.commands.$OS_TYPE.check" "$CONFIG_FILE")
INSTALL_CMD=$(jq -r ".screenshot.commands.$OS_TYPE.install" "$CONFIG_FILE")

if ! eval "$CHECK_CMD" &> /dev/null; then
    echo "üíæ –£—Ç–∏–ª—É –¥–ª—è —Å–∫—Ä–∏–Ω–æ–≤ –Ω–µ –Ω–∞—à–µ–ª ‚Äî —â–∞ –∑–∞–∫–∏–Ω—É –ø–æ-–±—ã—Å—Ç—Ä–æ–º—É..."
    eval "$INSTALL_CMD"
    echo "‚úÖ –£—Ç–∏–ª–∞ –∑–∞—Å–µ—Ç–∞–ø–µ–Ω–∞!"
else
    echo "‚úÖ –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–∫—Ä–∏–Ω–æ–≤ —É–∂–µ –∑–∞—Å–µ—Ç–∞–ø–µ–Ω–∞!"
fi

# –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ ! -d "venv" ]; then
    echo "üíæ –°–æ–∑–¥–∞—é –≤–∏—Ä—Ç—É–∞–ª–æ—á–∫—É..."
    python3 -m venv venv
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª–æ—á–∫–∞ –ø–æ–¥–Ω—è—Ç–∞!"
fi
source venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ ! -f "venv/installed.lock" ] || [ requirements.txt -nt venv/installed.lock ]; then
    echo "üíæ –ó–∞–∫–∏–¥—ã–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    pip install --upgrade pip
    pip install -r requirements.txt
    touch venv/installed.lock
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–æ–¥—ä–µ—Ö–∞–ª–∏!"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
pkill -9 -f bot.py
pkill -9 -f screenshot_sender.py

# –ü–æ–ª—É—á–µ–Ω–∏–µ chat_id
nohup python3 bot.py > bot.log 2>&1 &
sleep 5

CHAT_ID=$(jq -r '.telegram.chat_id' "$CONFIG_FILE")
if [[ "$CHAT_ID" == "0" || "$CHAT_ID" == "null" ]]; then
    echo "üîî –ô–æ! –ó–∞–ª–µ—Ç–∞–π –≤ –¢–µ–ª–µ–≥—É –∏ –≤ –±–æ—Ç–µ –∂–º–∏ /start! –ñ–¥—É..."
    until [[ "$CHAT_ID" != "0" && "$CHAT_ID" != "null" && -n "$CHAT_ID" ]]; do
        sleep 5
        CHAT_ID=$(jq -r '.telegram.chat_id' "$CONFIG_FILE")
    done
    echo "‚úÖ chat_id —á–µ—Ç–∫–∏–π: $CHAT_ID"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ api_key
API_KEY=$(jq -r '.openai.api_key' "$CONFIG_FILE")
while [[ "$API_KEY" == "null" || -z "$API_KEY" ]]; do
    echo "üîî –ô–æ! –ü–æ–¥–∫–∏–Ω—å API key –æ—Ç –ò–ò —Å—é–¥–∞, –ø–ª–∏–∑:"
    read -r KEY_INPUT
    if [[ -n "$KEY_INPUT" ]]; then
        if [[ "$KEY_INPUT" == sk-* ]]; then
            update_config ".openai.api_key = \"$KEY_INPUT\""
            echo "‚úÖ OpenAI –∫–ª—é—á –ø–æ –∫–∞–π—Ñ—É –≤–ª–µ—Ç–µ–ª –≤ config.json!"
            API_KEY="$KEY_INPUT"
        else
            update_config ".deepseek.api_key = \"$KEY_INPUT\""
            echo "‚úÖ Deepseek –∫–ª—é—á –ø–æ –∫–∞–π—Ñ—É –≤–ª–µ—Ç–µ–ª –≤ config.json!"
            API_KEY="$KEY_INPUT"
        fi
    fi
done

# –ó–∞–ø—É—Å–∫ screenshot_sender.py
HOTKEY=$(jq -r '.screenshot.hotkey' "$CONFIG_FILE")
nohup python3 screenshot_sender.py >> bot.log 2>&1 &
echo "‚úÖ –í—Å–µ —á–µ—Ç–∫–æ! –ñ–º–∏ ${HOTKEY} –∏ —Å–∫—Ä–∏–Ω –ª–µ—Ç–∏—Ç –≤ –¢–µ–ª–µ–≥—É."
